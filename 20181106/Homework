1.阅读教材P111至P113的例5.10关于斐波那契数列的讲解，理解斐波那契数列的两种递归实现方式，并实现P113中递归函数的改进版（注：程序命名为1.c）。


2.阅读教材P113的例5.11关于汉诺塔的讲解，并实现此程序（注：程序命名为2.c）。


3.台阶问题。

问题描述：
有N级台阶，刚开始时你在第一级，若每次只能跨上一级或二级，要走上第N级台阶，共有多少种走法？

输入：
输入数据为一个正整数N(1≤N≤1000)，表示台阶的级数。

输出：
输出走上第N级台阶的走法数目，由于答案可能很大，你需要输出走法数目对100007取余后的结果。

样例输入#1：
2
样例输出#1：
1

样例输入#2：
3
样例输出#2：
2

样例输入#3：
4
样例输出#3：
3

（注：程序命名为3.c）。


4.台阶问题加强版。

问题描述：
有N级台阶，刚开始时你在第一级，若每次可以向上跨最多K级台阶，要走上第N级台阶，共有多少种走法？

输入：
输入数据为一个正整数N(1≤N≤1000)，表示台阶的级数；一个正整数K(1≤K≤100)，表示每次最多可以向上跨的台阶数。

输出：
输出走上第N级台阶的走法数目，由于答案可能很大，你需要输出走法数目对100007取余后的结果。

样例输入#1：
5 2
样例输出#1：
8

（注：程序命名为4.c）。


5.汉诺塔加强版：汉诺双塔问题。

问题描述：
给定A、B、C三根足够长的细柱，在A柱上放有2n个中间有孔的圆盘，共有n个不同的尺寸，每个尺寸都有两个相同的圆盘，注意这两个圆盘是不加区分的（2018级软工专业群的图片是n为3时的情形）。
现要将这些圆盘移到C柱上，在移动过程中可放在B柱上暂存。要求：
（1）每次只能移动一个圆盘；
（2）A、B、C三根细柱上的圆盘都要保持上小下大的顺序。
求：设A(n)为2n个圆盘完成上述任务所需的最少移动次数，对于输入的n，输出A(n)。

输入：
输入数据为一个正整数n(1≤n≤25)，表示在A柱上放有2n个圆盘。

输出：
输出完成上述任务所需的最少移动次数A(n)。

样例输入#1：
1
样例输出#1：
2

样例输入#2：
2
样例输出#2：
6

（提示：设法建立A(n)与A(n-1)的递推关系式；注：程序命名为5.c）。


6.汉诺塔加强加强版：有限制的汉诺塔问题。

经过以上两道汉诺塔问题，你已经很熟悉汉诺塔游戏的规则了。现在我们来对原始的汉诺塔加上一个限制：不能从最左侧的塔直接移动到最右侧，也不能从最右侧直接移动到最左侧，而是必须经过中间的塔。也就是说，如果你想将一个原盘从A塔，移动到C塔，你应当先将该原盘从A塔移动到B塔，再将该原盘从B塔移动到C塔。

基于以上限制，输出将n个原盘从A塔全部移动到C塔的过程，并在最后输出总共的移动步骤。n为读入的值（注：程序命名为6.c）。


7.利用组合数的性质，使用递归方法求二项式系数C(n,k)。其中，组合数的性质为： C(n,k)=C(n-1,k-1)+C(n-1,k)。递归函数声明如下：

int BinomialCoefficient(int n, int k);

在主函数中调用该函数，并进行多组测试，以验证你的函数（注：程序命名为7.c）。


8.查看知乎问题什么是递归？：https://www.zhihu.com/question/20507130。（注：此题无须写程序）


9.了解尾递归：https://baike.baidu.com/item/%E5%B0%BE%E9%80%92%E5%BD%92/554682?fr=aladdin。（注：此题无须写程序）


10.体会下面这句话：
要理解递归，先得理解递归；如果理解了递归，那么就理解了递归。（注：此题无须写程序）


注：
1）作业提交到自己仓库的19180xxx/20181106目录下，19180xxx为你的学号。
2）建议每做完一道题目后，使用git add*将其添加，但暂且不要用git commit将其提交。所有题目完成后，使用git commit提交，之后再git push。
3）慎用git commit。请确保无误后，再进行commit，以防造成文件混乱。
4）截止日期：2018.11.13-00:00:00（零点）。
